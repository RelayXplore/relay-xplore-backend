services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: api_dev
    ports:
      - '4000:4000'
    volumes:
      - .:/app
      - /app/node_modules
    env_file:
      - .env
    environment:
      PORT: ${PORT:-4000}
      NODE_ENV: ${NODE_ENV:-development}
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-rx_prod}
      JWT_SECRET: ${JWT_SECRET:-sdsadasdsdasdasdasd}
      JWT_EXPIRATION_IN: ${JWT_EXPIRATION:-7d}
    depends_on:
      - postgres
    command: npm run start:dev

  migrate:
    build:
      context: .
      dockerfile: Dockerfile.migrate
    container_name: api_dev_migrate
    depends_on:
      - postgres
    environment:
      PORT: ${PORT:-4001}
      NODE_ENV: ${NODE_ENV:-development}
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-rx_dev}
    command: ['npm', 'run', 'migrate:run']

  postgres:
    image: postgres:16
    container_name: postgres_dev
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-rx_dev}
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data

volumes:
  postgres_data_dev:
